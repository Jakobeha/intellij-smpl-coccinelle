SmPL File
  SmPLElementType.COCCI_HEADER
    SmPLElementType.VIRTUAL_COCCI
      PsiElement(SmPLTokenType.virtual)('virtual')
      PsiElement(SmPLTokenType.word)('patch')
  SmPLElementType.SCRIPT_CODE
    SmPLElementType.SCRIPT_METAVARIABLES
      PsiElement(SmPLTokenType.@initialize:)('@initialize:')
      SmPLElementType.SCRIPT_LANG
        PsiElement(SmPLTokenType.python)('python')
      SmPLElementType.RULENAME
        <empty list>
      PsiElement(SmPLTokenType.@)('@')
      PsiElement(SmPLTokenType.@@)('@@\n\n')
    SmPLElementType.SCRIPT_BODY
      PsiElement(SmPLTokenType.PYTHON_BLOCK)('f = open('coccinelle.log', 'a')\n\n')
  SmPLElementType.TRANSFORMATION
    SmPLElementType.METAVARIABLES
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.RULENAME
        SmPLElementType.ID
          PsiElement(SmPLTokenType.word)('probe')
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.METADECL
        SmPLElementType.IDENTIFIER_METADECL
          PsiElement(SmPLTokenType.identifier)('identifier')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('p')
            PsiElement(SmPLTokenType.,)(',')
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('probefn')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.DECLARER_NAME_METADECL
          PsiElement(SmPLTokenType.declarer name)('declarer name')
          SmPLElementType.IDS
            SmPLElementType.ID
              PsiElement(SmPLTokenType.word)('module_platform_driver_probe')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.POSITION_METADECL
          PsiElement(SmPLTokenType.position)('position')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('pos')
        PsiElement(SmPLTokenType.;)(';')
      PsiElement(SmPLTokenType.@@)('@@\n')
    SmPLElementType.TRANSFORMATION_BODY
      PsiElement(SmPLTokenType.TRANSFORMATION_BLOCK)('(\n  module_platform_driver_probe(p, probefn@pos);\n|\n  struct platform_driver p = {\n    .probe = probefn@pos,\n  };\n|\n  struct i2c_driver p = {\n    .probe = probefn@pos,\n  };\n|\n  struct spi_driver p = {\n    .probe = probefn@pos,\n  };\n)\n\n')
  SmPLElementType.TRANSFORMATION
    SmPLElementType.METAVARIABLES
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.RULENAME
        SmPLElementType.ID
          PsiElement(SmPLTokenType.word)('remove')
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.METADECL
        SmPLElementType.IDENTIFIER_METADECL
          PsiElement(SmPLTokenType.identifier)('identifier')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('probe')
              PsiElement(SmPLTokenType..)('.')
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('p')
            PsiElement(SmPLTokenType.,)(',')
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('removefn')
        PsiElement(SmPLTokenType.;)(';')
      PsiElement(SmPLTokenType.@@)('@@\n  ')
    SmPLElementType.TRANSFORMATION_BODY
      PsiElement(SmPLTokenType.TRANSFORMATION_BLOCK)('struct\n(\n  platform_driver\n|\n  i2c_driver\n|\n  spi_driver\n)\n  p = {\n    .remove = \(__exit_p(removefn)\|removefn\),\n  };\n\n// Get type of device.\n// Using it ensures that we don't touch any other data structure\n// which might have a '->dev' object.\n\n')
  SmPLElementType.TRANSFORMATION
    SmPLElementType.METAVARIABLES
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.RULENAME
        SmPLElementType.ID
          PsiElement(SmPLTokenType.word)('ptype')
        SmPLElementType.DEPENDS_ON_RULEATTR
          PsiElement(SmPLTokenType.depends on)('depends on')
          SmPLElementType.DEP
            SmPLElementType.DEP_
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('probe')
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.METADECL
        SmPLElementType.TYPE_METADECL
          PsiElement(SmPLTokenType.type)('type')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('T')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.IDENTIFIER_METADECL
          PsiElement(SmPLTokenType.identifier)('identifier')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('probe')
              PsiElement(SmPLTokenType..)('.')
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('probefn')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.IDENTIFIER_METADECL
          PsiElement(SmPLTokenType.identifier)('identifier')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('pdev')
        PsiElement(SmPLTokenType.;)(';')
      PsiElement(SmPLTokenType.@@)('@@\n')
    SmPLElementType.TRANSFORMATION_BODY
      PsiElement(SmPLTokenType.TRANSFORMATION_BLOCK)('probefn(T *pdev, ...) { ... }\n\n')
  SmPLElementType.TRANSFORMATION
    SmPLElementType.METAVARIABLES
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.RULENAME
        SmPLElementType.ID
          PsiElement(SmPLTokenType.word)('have_action')
        SmPLElementType.DEPENDS_ON_RULEATTR
          PsiElement(SmPLTokenType.depends on)('depends on')
          SmPLElementType.DEP
            SmPLElementType.DEP_
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('probe')
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.METADECL
        SmPLElementType.IDENTIFIER_METADECL
          PsiElement(SmPLTokenType.identifier)('identifier')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('initfn')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.POSITION_METADECL
          PsiElement(SmPLTokenType.position)('position')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('p')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.TYPE_METADECL
          PsiElement(SmPLTokenType.type)('type')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('ptype')
              PsiElement(SmPLTokenType..)('.')
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('T')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.IDENTIFIER_METADECL
          PsiElement(SmPLTokenType.identifier)('identifier')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('pdev')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.IDENTIFIER_METADECL
          PsiElement(SmPLTokenType.identifier)('identifier')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('func')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.EXPRESSION_METADECL
          PsiElement(SmPLTokenType.expression)('expression')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('err')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.EXPRESSION_METADECL
          PsiElement(SmPLTokenType.expression)('expression')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('data')
        PsiElement(SmPLTokenType.;)(';')
      PsiElement(SmPLTokenType.@@)('@@\n')
    SmPLElementType.TRANSFORMATION_BODY
      PsiElement(SmPLTokenType.TRANSFORMATION_BLOCK)('initfn(T *pdev, ...)\n{\n<+...\n  err = devm_add_action@p(..., func, data);\n  if (err) {\n    func(data);\n    ...\n  }\n...+>\n}\n\n')
  SmPLElementType.TRANSFORMATION
    SmPLElementType.METAVARIABLES
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.RULENAME
        SmPLElementType.ID
          PsiElement(SmPLTokenType.word)('action')
        SmPLElementType.DEPENDS_ON_RULEATTR
          PsiElement(SmPLTokenType.depends on)('depends on')
          SmPLElementType.DEP
            SmPLElementType.DEP_
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('have_action')
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.METADECL
        SmPLElementType.POSITION_METADECL
          PsiElement(SmPLTokenType.position)('position')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('have_action')
              PsiElement(SmPLTokenType..)('.')
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('p')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.EXPRESSION_METADECL
          PsiElement(SmPLTokenType.expression)('expression')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('have_action')
              PsiElement(SmPLTokenType..)('.')
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('err')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.IDENTIFIER_METADECL
          PsiElement(SmPLTokenType.identifier)('identifier')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('have_action')
              PsiElement(SmPLTokenType..)('.')
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('func')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.EXPRESSION_METADECL
          PsiElement(SmPLTokenType.expression list)('expression list')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('es')
        PsiElement(SmPLTokenType.;)(';')
      PsiElement(SmPLTokenType.@@)('@@\n\n')
    SmPLElementType.TRANSFORMATION_BODY
      PsiElement(SmPLTokenType.TRANSFORMATION_BLOCK)('- err = devm_add_action@p(es);\n+ err = devm_add_action_or_reset(es);\n  if (err) {\n- func(...);\n  ...\n  }\n\n')
  SmPLElementType.SCRIPT_CODE
    SmPLElementType.SCRIPT_METAVARIABLES
      PsiElement(SmPLTokenType.@script:)('@script:')
      SmPLElementType.SCRIPT_LANG
        PsiElement(SmPLTokenType.python)('python')
      SmPLElementType.RULENAME
        SmPLElementType.DEPENDS_ON_RULEATTR
          PsiElement(SmPLTokenType.depends on)('depends on')
          SmPLElementType.DEP
            SmPLElementType.DEP_
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('have_action')
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.SCRIPT_METADECL
        SmPLElementType.SCRIPT_METADECL_ASSIGN
          SmPLElementType.ID
            PsiElement(SmPLTokenType.word)('p')
        SmPLElementType.SCRIPT_METADECL_ASSIGN_RULE
          PsiElement(SmPLTokenType.<<)('<<')
          SmPLElementType.VID
            SmPLElementType.ID
              PsiElement(SmPLTokenType.word)('have_action')
          PsiElement(SmPLTokenType..)('.')
          SmPLElementType.ID
            PsiElement(SmPLTokenType.word)('p')
        PsiElement(SmPLTokenType.;)(';')
      PsiElement(SmPLTokenType.@@)('@@\n\n')
    SmPLElementType.SCRIPT_BODY
      PsiElement(SmPLTokenType.PYTHON_BLOCK)('print >> f, "%s:action1:%s" % (p[0].file, p[0].line)\n\n')
  SmPLElementType.TRANSFORMATION
    SmPLElementType.METAVARIABLES
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.RULENAME
        SmPLElementType.ID
          PsiElement(SmPLTokenType.word)('ha2')
        SmPLElementType.DEPENDS_ON_RULEATTR
          PsiElement(SmPLTokenType.depends on)('depends on')
          SmPLElementType.DEP
            SmPLElementType.DEP_
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('probe')
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.METADECL
        SmPLElementType.IDENTIFIER_METADECL
          PsiElement(SmPLTokenType.identifier)('identifier')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('initfn')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.POSITION_METADECL
          PsiElement(SmPLTokenType.position)('position')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('p')
            PsiElement(SmPLTokenType.,)(',')
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('p1')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.TYPE_METADECL
          PsiElement(SmPLTokenType.type)('type')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('ptype')
              PsiElement(SmPLTokenType..)('.')
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('T')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.IDENTIFIER_METADECL
          PsiElement(SmPLTokenType.identifier)('identifier')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('pdev')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.IDENTIFIER_METADECL
          PsiElement(SmPLTokenType.identifier)('identifier')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('f1')
            PsiElement(SmPLTokenType.,)(',')
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('f2')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.EXPRESSION_METADECL
          PsiElement(SmPLTokenType.expression)('expression')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('err')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.EXPRESSION_METADECL
          PsiElement(SmPLTokenType.expression)('expression')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('d1')
            PsiElement(SmPLTokenType.,)(',')
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('d2')
        PsiElement(SmPLTokenType.;)(';')
      PsiElement(SmPLTokenType.@@)('@@\n')
    SmPLElementType.TRANSFORMATION_BODY
      PsiElement(SmPLTokenType.TRANSFORMATION_BLOCK)('initfn@p1(T *pdev, ...)\n{\n<+...\n  err = devm_add_action@p(..., f1, d1);\n  if (err) {\n    ...\n    f2(d2);\n    ...\n  }\n...+>\n}\n\n')
  SmPLElementType.TRANSFORMATION
    SmPLElementType.METAVARIABLES
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.RULENAME
        SmPLElementType.ID
          PsiElement(SmPLTokenType.word)('ha3')
        SmPLElementType.DEPENDS_ON_RULEATTR
          PsiElement(SmPLTokenType.depends on)('depends on')
          SmPLElementType.DEP
            SmPLElementType.DEP_
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('ha2')
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.METADECL
        SmPLElementType.IDENTIFIER_METADECL
          PsiElement(SmPLTokenType.identifier)('identifier')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('ha2')
              PsiElement(SmPLTokenType..)('.')
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('f1')
            PsiElement(SmPLTokenType.,)(',')
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('ha2')
              PsiElement(SmPLTokenType..)('.')
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('f2')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.POSITION_METADECL
          PsiElement(SmPLTokenType.position)('position')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('p')
        PsiElement(SmPLTokenType.;)(';')
      PsiElement(SmPLTokenType.@@)('@@\n\n  ')
    SmPLElementType.TRANSFORMATION_BODY
      PsiElement(SmPLTokenType.TRANSFORMATION_BLOCK)('f1@p(...)\n  {\n  <+...\n  f2(...);\n  ...+>\n  }\n\n')
  SmPLElementType.TRANSFORMATION
    SmPLElementType.METAVARIABLES
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.RULENAME
        SmPLElementType.ID
          PsiElement(SmPLTokenType.word)('ha4')
        SmPLElementType.DEPENDS_ON_RULEATTR
          PsiElement(SmPLTokenType.depends on)('depends on')
          SmPLElementType.DEP
            SmPLElementType.DEP_
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('ha2')
            PsiElement(SmPLTokenType.&&)('&&')
            SmPLElementType.DEP
              SmPLElementType.DEP_
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('ha3')
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.METADECL
        SmPLElementType.EXPRESSION_METADECL
          PsiElement(SmPLTokenType.expression)('expression')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('ha2')
              PsiElement(SmPLTokenType..)('.')
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('err')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.IDENTIFIER_METADECL
          PsiElement(SmPLTokenType.identifier)('identifier')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('ha2')
              PsiElement(SmPLTokenType..)('.')
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('f2')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.EXPRESSION_METADECL
          PsiElement(SmPLTokenType.expression)('expression')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('ha2')
              PsiElement(SmPLTokenType..)('.')
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('d2')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.POSITION_METADECL
          PsiElement(SmPLTokenType.position)('position')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('ha2')
              PsiElement(SmPLTokenType..)('.')
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('p')
        PsiElement(SmPLTokenType.;)(';')
      SmPLElementType.METADECL
        SmPLElementType.EXPRESSION_METADECL
          PsiElement(SmPLTokenType.expression list)('expression list')
          SmPLElementType.PMIDS_WITH_CONSTRAINTS
            SmPLElementType.PMID
              SmPLElementType.VID
                SmPLElementType.ID
                  PsiElement(SmPLTokenType.word)('es')
        PsiElement(SmPLTokenType.;)(';')
      PsiElement(SmPLTokenType.@@)('@@\n\n')
    SmPLElementType.TRANSFORMATION_BODY
      PsiElement(SmPLTokenType.TRANSFORMATION_BLOCK)('- err = devm_add_action@p(es);\n+ err = devm_add_action_or_reset(es);\n  if (err) {\n  ...\n- f2(d2);\n  ...\n  }\n\n')
  SmPLElementType.SCRIPT_CODE
    SmPLElementType.SCRIPT_METAVARIABLES
      PsiElement(SmPLTokenType.@script:)('@script:')
      SmPLElementType.SCRIPT_LANG
        PsiElement(SmPLTokenType.python)('python')
      SmPLElementType.RULENAME
        SmPLElementType.DEPENDS_ON_RULEATTR
          PsiElement(SmPLTokenType.depends on)('depends on')
          SmPLElementType.DEP
            SmPLElementType.DEP_
              SmPLElementType.ID
                PsiElement(SmPLTokenType.word)('ha4')
      PsiElement(SmPLTokenType.@)('@')
      SmPLElementType.SCRIPT_METADECL
        SmPLElementType.SCRIPT_METADECL_ASSIGN
          SmPLElementType.ID
            PsiElement(SmPLTokenType.word)('p')
        SmPLElementType.SCRIPT_METADECL_ASSIGN_RULE
          PsiElement(SmPLTokenType.<<)('<<')
          SmPLElementType.VID
            SmPLElementType.ID
              PsiElement(SmPLTokenType.word)('probe')
          PsiElement(SmPLTokenType..)('.')
          SmPLElementType.ID
            PsiElement(SmPLTokenType.word)('pos')
        PsiElement(SmPLTokenType.;)(';')
      PsiElement(SmPLTokenType.@@)('@@\n\n')
    SmPLElementType.SCRIPT_BODY
      PsiElement(SmPLTokenType.PYTHON_BLOCK)('print >> f, "%s:action1:%s" % (p[0].file, p[0].line)')